<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zywx.appdo.flow.dao.impl.BpmTodoTaskDaoImpl">
	<resultMap id="BaseResultMap" type="org.zywx.appdo.flow.entity.BpmTodoTask">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="instanceid" property="instanceid" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="metaid" property="metaid" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="tenantId" property="tenantId" jdbcType="VARCHAR" />
		<result column="busiid" property="busiid" jdbcType="VARCHAR" />
		<result column="businessKey" property="businessKey" jdbcType="VARCHAR" />
		<result column="busipath" property="busipath" jdbcType="VARCHAR" />
		<result column="businame" property="businame" jdbcType="VARCHAR" />
		<result column="year" property="year" jdbcType="VARCHAR" />
		<result column="userId" property="userId" jdbcType="VARCHAR" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="isback" property="isback" jdbcType="VARCHAR" />
		<result column="isrevoke" property="isrevoke" jdbcType="VARCHAR" />
		<result column="busicode" property="busicode" jdbcType="VARCHAR" />
		<result column="ID_" property="ID_" jdbcType="VARCHAR" />
		<result column="REV_" property="REV_" jdbcType="VARCHAR" />
		<result column="EXECUTION_ID_" property="EXECUTION_ID_"
			jdbcType="VARCHAR" />
		<result column="PROC_INST_ID_" property="PROC_INST_ID_"
			jdbcType="VARCHAR" />
		<result column="PROC_DEF_ID_" property="PROC_DEF_ID_" jdbcType="VARCHAR" />
		<result column="NAME_" property="NAME_" jdbcType="VARCHAR" />
		<result column="PARENT_TASK_ID_" property="PARENT_TASK_ID_"
			jdbcType="VARCHAR" />
		<result column="DESCRIPTION_" property="DESCRIPTION_" jdbcType="VARCHAR" />
		<result column="TASK_DEF_KEY_" property="TASK_DEF_KEY_"
			jdbcType="VARCHAR" />
		<result column="ASSIGNEE_" property="ASSIGNEE_" jdbcType="VARCHAR" />
		<result column="DELEGATION_" property="DELEGATION_" jdbcType="VARCHAR" />
		<result column="PRIORITY_" property="PRIORITY_" jdbcType="VARCHAR" />

		<result column="CREATE_TIME_" property="CREATE_TIME_" jdbcType="TIMESTAMP" />
		<result column="DUE_DATE_" property="DUE_DATE_" jdbcType="TIMESTAMP" />
		<!-- 取历史记录使用 -->
		<result column="END_TIME_" property="END_TIME_" jdbcType="TIMESTAMP" />
		<result column="START_TIME_" property="START_TIME_" jdbcType="TIMESTAMP" />
		<result column="CLAIM_TIME_" property="CLAIM_TIME_" jdbcType="TIMESTAMP" />
		<!-- 取历史记录使用 -->
		<result column="DURATION_" property="DURATION_" jdbcType="BIGINT" />
		<result column="CATEGORY_" property="CATEGORY_" jdbcType="VARCHAR" />
		<result column="SUSPENSION_STATE_" property="SUSPENSION_STATE_"
			jdbcType="VARCHAR" />
		<result column="FORM_KEY_" property="FORM_KEY_" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, code, instanceid, name, metaid, createtime,
		remark,
		tenantId,busiid,businame,businessKey,year,userId,userName,isback,isrevoke,busicode,
		ID_,REV_,EXECUTION_ID_,PROC_INST_ID_,PROC_DEF_ID_,NAME_,PARENT_TASK_ID_,
		DESCRIPTION_,TASK_DEF_KEY_,ASSIGNEE_,DELEGATION_,PRIORITY_,CREATE_TIME_,
		DUE_DATE_,CATEGORY_,SUSPENSION_STATE_,FORM_KEY_,CLAIM_TIME_,END_TIME_
	</sql>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from v_bpm_todo_ru_task
		where id = #{id,jdbcType=INTEGER}
		and
		tenantId =
		#{tenantId,jdbcType=VARCHAR}
	</select>
	<select id="getByIds" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from v_bpm_todo_ru_task
		where tenantId =
		#{tenantId,jdbcType=BIGINT} AND
		id IN
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
	<select id="getPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from v_bpm_todo_ru_task
		<where>
			<include refid="conditionSql" />
		</where>
		order by CREATE_TIME_ desc
	</select>
	<select id="getByMap" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from v_bpm_todo_ru_task
		<where>
			<include refid="conditionSql" />
		</where>
		order by ${sort} ${dir}
	</select>

	<select id="getClaimData" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		SELECT
		RES.*, I_OR0.USER_ID_
		FROM
		v_bpm_todo_ru_task RES
		INNER JOIN ACT_RU_IDENTITYLINK I_OR0 ON I_OR0.TASK_ID_ = RES.ID_
		WHERE
		RES.tenantId = #{tenantId}
		AND RES.SUSPENSION_STATE_ = 1
		AND
		(
		(
		RES.ASSIGNEE_ IS NULL
		AND I_OR0.TYPE_ = 'candidate'
		AND (
		I_OR0.USER_ID_
		= #{USER_ID_}
		OR I_OR0.GROUP_ID_ IN (#{GROUP_ID_})
		)
		)
		)
		ORDER BY
		RES.CREATE_TIME_ DESC
	</select>

	<select id="getTodoData" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from v_bpm_todo_ru_task
		<where>
			<include refid="conditionSql" />
		</where>
		and userId != ASSIGNEE_
		order by END_TIME_ DESC
	</select>

	<select id="getHistoryFlowData" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		SELECT ${opColumn} FROM
		v_bpm_todo_procinst task
		<where>
			1 = 1  
			<if test="opTypeSQl != null and  opTypeSQl != '' ">
				and ${opTypeSQl}
			</if>
		</where>
		GROUP BY businessKey
		ORDER BY END_TIME_ desc
	</select>

	<select id="getApproveData" resultMap="BaseResultMap"
		parameterType="java.util.Map">

		SELECT
		res.title,
		res.createtime,
		Max(res.END_TIME_) END_TIME_,
		res.businame,
		res.userName,
		res.businessKey,
		res.ID_,
		res.metaid,
		res.tenantId,
		res.instanceid,
		res.busicode,res.busiid
		FROM
		v_bpm_todo_hi_task res
		WHERE
		res.ASSIGNEE_ = #{ASSIGNEE_}
		AND
		res.tenantId = #{tenantId}
		AND res.userId != res.ASSIGNEE_
		AND
		res.END_TIME_ IS NOT NULL
		GROUP BY
		res.businessKey
		ORDER BY
		res.END_TIME_
		DESC

		<!-- SELECT res.* FROM v_bpm_todo_hi_task res WHERE res.ASSIGNEE_ = #{ASSIGNEE_} 
			AND res.tenantId = #{tenantId} AND res.userId != res.ASSIGNEE_ and res.END_TIME_ 
			is not null ORDER BY res.END_TIME_ DESC -->
	</select>

	<sql id="conditionSql">
		<if test="title != null and  title != '' ">
			and title = #{title}
		</if>
		<if test="code != null and  code != '' ">
			and code = #{code}
		</if>
		<if test="instanceid != null and  instanceid != '' ">
			and instanceid = #{instanceid}
		</if>
		<if test="name != null and  name != '' ">
			and name = #{name}
		</if>
		<if test="metaid != null and  metaid != '' ">
			and metaid = #{metaid}
		</if>
		<if test="createtime != null and  createtime != '' ">
			and createtime = #{createtime}
		</if>
		<if test="remark != null and  remark != '' ">
			and remark = #{remark}
		</if>
		<if test="tenantId != null and  tenantId != '' ">
			and tenantId = #{tenantId}
		</if>
		<if test="busiid != null and  busiid != '' ">
			and busiid = #{busiid}
		</if>
		<if test="businessKey != null and  businessKey != '' ">
			and businessKey = #{businessKey}
		</if>
		<if test="userId != null and  userId != '' ">
			and userId = #{userId}
		</if>
		<if test="userName != null and  userName != '' ">
			and userName = #{userName}
		</if>
		<if test="year != null and  year != '' ">
			and year = #{year}
		</if>
		<if test="isback != null and  isback != '0' ">
			and isback = #{isback}
		</if>
		<if test="isrevoke != null and  isrevoke != '0' ">
			and isrevoke = #{isrevoke}
		</if>
		<if test="ID_ != null and  ID_ != '' ">
			and ID_ = #{ID_}
		</if>
		<if test="ASSIGNEE_ != null and  ASSIGNEE_ != '' ">
			and ASSIGNEE_ = #{ASSIGNEE_}
		</if>
		<if test="PROC_INST_ID_ != null and  PROC_INST_ID_ != '' ">
			and PROC_INST_ID_ = #{PROC_INST_ID_}
		</if>
		<if test="START_USER_ID_ != null and  START_USER_ID_ != '' ">
			and START_USER_ID_ = #{START_USER_ID_}
		</if>
	</sql>
</mapper>